#!/bin/bash -e
#
# GNU Bash required for process substitution `<()` later.
#
# Environment variables:
#
# - `GITHUB_ACTION_PATH`: path to this repository.
# - `GITHUB_ACTOR`: GitHub username of whoever triggered the action.
# - `GITHUB_WORKSPACE`: default path for the workflow (the tmux session will start there).
#

cd "$GITHUB_ACTION_PATH"

cloudflared_url=https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
echo "Downloading \`cloudflared\` from <$cloudflared_url>..."
curl --location --silent --output cloudflared "$cloudflared_url"
chmod +x cloudflared

curl -s "https://api.github.com/users/$GITHUB_ACTOR/keys" | jq -r '.[].key' > authorized_keys

if grep -q . authorized_keys; then
    echo "Configured SSH key(s) for user: $GITHUB_ACTOR"
else
    echo "No SSH key found for user: $GITHUB_ACTOR"
    echo "Setting SSH password..."

    #
    # This command could be "beautifully" lazy like the commented line below,
    # but for some reason on GitHub Actions specifically (and nowhere else I
    # could find) it logs the following warnings:
    #
    #     tr: write error: Broken pipe
    #     tr: write error
    #     base64: write error: Broken pipe
    #     base64: write error
    #
    # Even though it still succeeds and behaves properly, I'd rather not have
    # those warnings show up, so I use `head` twice, getting 16 bytes off
    # `/dev/urandom`, Base64-encoding it (which should give us 25 characters),
    # and we drop all the nonalphanumeric ones and trim it to 16 chars.
    #
    password=$(head -c 16 /dev/urandom | base64 | tr -cd '[:alnum:]' | head -c 16)
    # password=$(base64 < /dev/urandom | tr -cd '[:alnum:]' | head -c16)

    (echo "$password"; echo "$password") | sudo passwd "$USER"
fi


# `-q` is to make it quiet, `-N ''` is for empty passphrase
echo 'Creating SSH server key...'
ssh-keygen -q -f ssh_host_rsa_key -N ''
echo "$fingerprint"

echo 'Creating SSH server config...'
sed "s,\$PWD,$PWD,;s,\$USER,$USER," sshd_config.template > sshd_config

echo 'Starting SSH server...'
/usr/sbin/sshd -f sshd_config -D &
sshd_pid=$!

echo 'Starting tmux session...'
(cd "$GITHUB_WORKSPACE" && tmux new-session -d -s debug)

# Use `sed -u` (unbuffered) otherwise logs don't show up in the UI
echo 'Starting Cloudflare tunnel...'
